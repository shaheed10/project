version: '2.1'

services:
  eureka-server:
    build: eureka-server/
    depends_on:
      config-service:
        condition: service_healthy
    restart: always
    network_mode: "host"
    image: demo-eureka-service
    hostname: localhost
    ports:
      - 9090:9090
    healthcheck:
      test: "exit 0"

  config-service:
    build: config-service/
    restart: always
    network_mode: "host"
    image: demo-config-service
    hostname: localhost
    ports:
      - 8891:8891
    healthcheck:
      test: "exit 0"

  api-gateway:
    build: zuul-apigateway/
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
    restart: always
    network_mode: "host"
    image: demo-zuul-service
    hostname: localhost
    ports:
      - 8092:8092
    healthcheck:
      test: "exit 0"


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    network_mode: "host"
    hostname: localhost
    restart: always
    healthcheck:
      test: "exit 0"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: ${IP_Kafka}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: ${IP_Zookeeper}
      KAFKA_CREATE_TOPICS: "Location:1:1, Certificates:1:1, Academies:1:1, PersonalInfo:1:1, Experience:1:1, Projects:1:1, Skills:1:1"
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zookeeper
    restart: always
    healthcheck:
      test: "exit 0"

  user-service:
    build: user-service/
    image: demo-user-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8081:8081
    depends_on:
      - config-service
      - eureka-server
    healthcheck:
      test: "exit 0"
